"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isLogLegacyInCustomerPromiseKSActive = exports.isDifferentiateMultiUserSessionFailureKSActive = exports.isAllowSkippingCPErrorKSActive = exports.isMarkPrivacyDataKSActive = void 0;
var sp_core_library_1 = require("@microsoft/sp-core-library");
function isMarkPrivacyDataKSActive() {
    // This as a KillSwitch may run in debug mode, as it occurs in paths that are triggered before KSes are loaded.
    // In this case, we ensure we're in debug and then safely ignore the check..
    try {
        return sp_core_library_1._SPKillSwitch.isActivated('d953c006-7eeb-48b7-ab00-ee9bb15488c3'
        /* '07/30/2024', 'liaye - Support marking privacy data in QosMonitor' */
        );
    }
    catch (e) {
        if (sp_core_library_1._BrowserUtilities.safelyAccessSessionStorage('spfx-debug')) {
            return false;
        }
        else {
            throw e;
        }
    }
}
exports.isMarkPrivacyDataKSActive = isMarkPrivacyDataKSActive;
// cross-projects
function isAllowSkippingCPErrorKSActive() {
    return sp_core_library_1._SPKillSwitch.isActivated('874c8d5e-155b-4d4a-a163-f4a4402438ce'
    /* '02/29/2024', 'liaye - Allow skipping CP error when writing expected error' */
    );
}
exports.isAllowSkippingCPErrorKSActive = isAllowSkippingCPErrorKSActive;
// cross-project: also in sp-edit-customer-promise and sp-pages-fluid
function isDifferentiateMultiUserSessionFailureKSActive() {
    return sp_core_library_1._SPKillSwitch.isActivated('f215a9d1-26ca-4398-b7b1-2600b0e3b1a6'
    /* '06/14/2024', 'dhivyavk - Differentiate single and multiple user session and failures for coauth' */
    );
}
exports.isDifferentiateMultiUserSessionFailureKSActive = isDifferentiateMultiUserSessionFailureKSActive;
// cross-projects
function isLogLegacyInCustomerPromiseKSActive() {
    return sp_core_library_1._SPKillSwitch.isActivated('a49471f3-bb8b-40e2-a3f1-a8dfac9529cb'
    /* '08/22/2024', 'liaye - Logging legacy code in CP' */
    );
}
exports.isLogLegacyInCustomerPromiseKSActive = isLogLegacyInCustomerPromiseKSActive;
//# sourceMappingURL=Killswitches.js.map