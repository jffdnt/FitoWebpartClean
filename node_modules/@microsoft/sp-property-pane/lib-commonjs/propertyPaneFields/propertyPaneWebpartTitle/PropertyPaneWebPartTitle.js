"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropertyPaneWebPartTitle = void 0;
var tslib_1 = require("tslib");
var Strings_resx_1 = tslib_1.__importDefault(require("../../loc/Strings.resx"));
var IPropertyPaneField_1 = require("../propertyPaneField/IPropertyPaneField");
var office_ui_fabric_react_bundle_1 = require("@ms/office-ui-fabric-react-bundle");
var sp_heading_level_1 = require("@ms/sp-heading-level");
var react_1 = tslib_1.__importDefault(require("react"));
var Flights_1 = require("../../common/Flights");
/**
 * Helper method to create an Heading dropdown and enable heading toggle on the PropertyPane.
 * @param properties - Strongly typed Heading dropdown and toggle properties.
 *
 * @internal
 */
function PropertyPaneWebPartTitle(properties) {
    return tslib_1.__spreadArray([
        {
            type: IPropertyPaneField_1.PropertyPaneFieldType.Toggle,
            targetProperty: properties.isTitleEnabledPropertyName
                ? properties.isTitleEnabledPropertyName
                : 'isTitleEnabled',
            properties: getPropertyPaneToggleProperties(properties.isTitleEnabled, properties.moduleName, 'enable-webpart-title-toggle', 'ShowWebpartTitle')
        }
    ], (properties.hideHeadingLevelDropdown
        ? []
        : [
            {
                type: IPropertyPaneField_1.PropertyPaneFieldType.Dropdown,
                targetProperty: properties.headingLevelPropertyName
                    ? properties.headingLevelPropertyName
                    : 'headingLevel',
                properties: tslib_1.__assign(tslib_1.__assign({}, getPropertyPaneDropdownProperties(properties.headingLevel, properties.moduleName, 'heading-size-dropdown', 'ChooseHeadingLevel')), { disabled: properties.isTitleEnabled !== undefined ? !properties.isTitleEnabled : false })
            }
        ]), true);
}
exports.PropertyPaneWebPartTitle = PropertyPaneWebPartTitle;
function getPropertyPaneToggleProperties(isTitleEnabled, moduleName, dataAutomationId, controlName) {
    return tslib_1.__assign({ onText: Strings_resx_1.default.ToggleOnText, offText: Strings_resx_1.default.ToggleOffText, onAriaLabel: Strings_resx_1.default.TitleToggleOnAriaLabel, offAriaLabel: Strings_resx_1.default.TitleToggleOffAriaLabel, dataAutomationId: dataAutomationId, checked: isTitleEnabled, ariaLabel: Strings_resx_1.default.ShowTitle, _label: getTitleToggleLabel() }, {
        logName: { moduleName: moduleName, controlName: controlName }
    });
}
function getPropertyPaneDropdownProperties(headingLevel, moduleName, dataAutomationId, controlName) {
    return {
        label: Strings_resx_1.default.headingLevelLabel,
        ariaLabel: Strings_resx_1.default.headingLevelLabel,
        dataAutomationId: dataAutomationId,
        tooltipProps: {
            tooltipText: Strings_resx_1.default.headingLevelTooltipDesc
        },
        options: [
            { key: 2, text: 'Heading 2' },
            { key: 3, text: 'Heading 3' },
            { key: 4, text: 'Heading 4' }
        ],
        selectedKey: headingLevel ? headingLevel : 2,
        onRenderOption: (0, Flights_1.isModifyFontSizeTitleHeadingsEnabled)() ? getHeadingLevelOption : undefined
    };
}
function getTitleToggleLabel() {
    return (react_1.default.createElement("div", { style: { display: 'inline-flex' } },
        react_1.default.createElement(office_ui_fabric_react_bundle_1.Label, { "aria-label": Strings_resx_1.default.ShowTitle }, Strings_resx_1.default.ShowTitle)));
}
function getHeadingLevelOption(option) {
    if (option) {
        return (react_1.default.createElement("div", { style: { display: 'inline-flex' } },
            react_1.default.createElement(office_ui_fabric_react_bundle_1.Label, { style: {
                    fontSize: (0, sp_heading_level_1._HeadingLevel)(option.key).fontSize,
                    fontWeight: '$ms-font-weight-semibold'
                } }, option.text)));
    }
    return react_1.default.createElement(react_1.default.Fragment, null);
}
//# sourceMappingURL=PropertyPaneWebPartTitle.js.map