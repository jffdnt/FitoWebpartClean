"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addFastServe = addFastServe;
const helpers_1 = require("yargs/helpers");
const yargs_1 = __importDefault(require("yargs"));
const path = __importStar(require("path"));
const os_1 = require("os");
const crypto_1 = require("crypto");
const node_fetch_1 = __importDefault(require("node-fetch"));
const del_1 = __importDefault(require("del"));
const tasks_1 = require("./tasks");
function addFastServe(build) {
    const argv = (0, yargs_1.default)((0, helpers_1.hideBin)(process.argv)).parseSync();
    const useCustomServe = argv['custom-serve'];
    const isClean = argv._.indexOf('clean') !== -1;
    if (isClean) {
        del_1.default.sync(['src/**/*.module.scss.d.ts', 'release'], { cwd: path.resolve(process.cwd()) });
    }
    if (!useCustomServe)
        return;
    trackAnalytics();
    build.addSuppression(/Error processing webpack stats: TypeError/gi);
    build.addSuppression(/Webpack error: RangeError: Invalid string length/gi);
    build.tslintCmd.enabled = false;
    (0, tasks_1.addSaveConfigTask)(build);
}
async function trackAnalytics() {
    try {
        let username = 'default';
        try {
            username = (0, os_1.userInfo)().username;
        }
        catch (e) {
        }
        const hostNameHash = (0, crypto_1.createHash)('md5').update((0, os_1.hostname)() + '@' + username).digest('hex');
        await (0, node_fetch_1.default)('https://fast-serve-track.azurewebsites.net/api/track', {
            method: 'post',
            headers: {
                'Content-Type': 'application/json',
                'x-functions-key': 'TX0jA2PGYZQFJgeJeqSJbRcYwV7tx72vOD2LkICWxLe1O0f6KxxLaQ=='
            },
            body: JSON.stringify({
                hostNameHash
            })
        });
    }
    catch (err) {
    }
}
//# sourceMappingURL=gulp.js.map