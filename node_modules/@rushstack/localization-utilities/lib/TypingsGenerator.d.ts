import { StringValuesTypingsGenerator, type IExportAsDefaultOptions, type ITypingsGeneratorBaseOptions } from '@rushstack/typings-generator';
import type { NewlineKind } from '@rushstack/node-core-library';
import type { IgnoreStringFunction } from './interfaces';
/**
 * @public
 */
export interface IInferInterfaceNameExportAsDefaultOptions extends Omit<IExportAsDefaultOptions, 'interfaceName'> {
    /**
     * When `exportAsDefault` is true and this option is true, the default export interface name will be inferred
     * from the filename.
     */
    inferInterfaceNameFromFilename?: boolean;
}
/**
 * @public
 */
export interface ITypingsGeneratorOptions extends ITypingsGeneratorBaseOptions {
    exportAsDefault?: boolean | IExportAsDefaultOptions | IInferInterfaceNameExportAsDefaultOptions;
    resxNewlineNormalization?: NewlineKind | undefined;
    ignoreMissingResxComments?: boolean | undefined;
    ignoreString?: IgnoreStringFunction;
    processComment?: (comment: string | undefined, relativeFilePath: string, stringName: string) => string | undefined;
}
/**
 * This is a simple tool that generates .d.ts files for .loc.json, .resx.json, .resjson, and .resx files.
 *
 * @public
 */
export declare class TypingsGenerator extends StringValuesTypingsGenerator {
    constructor(options: ITypingsGeneratorOptions);
}
//# sourceMappingURL=TypingsGenerator.d.ts.map