"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(_ref) {
  var cardPushButtonBackgroundColor = _ref.cardPushButtonBackgroundColor,
      cardPushButtonTextColor = _ref.cardPushButtonTextColor,
      accent = _ref.accent,
      paddingRegular = _ref.paddingRegular,
      primaryFont = _ref.primaryFont;
  return {
    '&.webchat__adaptive-card-renderer': {
      // Related to #4075.
      // Adaptive Cards assume its host is in "forced border-box" mode.
      // In CSS, the default is "content-box" mode.
      // https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing#values
      '& *': {
        boxSizing: 'border-box'
      },
      '& .ac-input, & .ac-inlineActionButton, & .ac-quickActionButton': {
        fontFamily: primaryFont
      },
      '& .ac-multichoiceInput': {
        padding: paddingRegular
      },
      '& .ac-pushButton': {
        appearance: 'none',
        backgroundColor: 'White',
        borderStyle: 'solid',
        borderWidth: 1,
        color: accent,
        fontWeight: 600,
        padding: paddingRegular
      },
      '& .ac-pushButton.style-destructive': {
        backgroundColor: '#E50000',
        color: 'white'
      },
      '& .ac-pushButton.style-destructive:hover, & .ac-pushButton.style-destructive:active': {
        backgroundColor: '#BF0000'
      },
      '& .ac-pushButton.style-positive': {
        backgroundColor: '#0078D7',
        color: 'white'
      },
      '& .ac-pushButton.style-positive:hover, & .ac-pushButton.style-positive:active': {
        backgroundColor: '#006ABC'
      },
      // The following styles are copied from :disabled via Chromium.
      '& .ac-pushButton, & input, & select, & textarea': {
        '&[aria-disabled="true"]': {
          backgroundColor: 'rgba(239, 239, 239, 0.3)',
          borderColor: 'rgba(118, 118, 118, 0.3)',
          borderStyle: 'solid',
          borderWidth: 1,
          color: '#545454'
        }
      },
      '& .ac-pushButton[aria-disabled="true"]': {
        backgroundColor: '#EEE',
        color: '#4F4F4F'
      },
      '& .ac-pushButton[aria-pressed="true"]': {
        backgroundColor: cardPushButtonBackgroundColor,
        borderColor: cardPushButtonBackgroundColor,
        color: cardPushButtonTextColor,
        '@media (forced-colors: active)': {
          backgroundColor: 'Highlight',
          borderColor: 'Highlight',
          color: 'HighlightText',
          forcedColorAdjust: 'none'
        }
      },
      '& input[aria-disabled="true"]': {
        padding: '2px 1px'
      }
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYXJkUHVzaEJ1dHRvbkJhY2tncm91bmRDb2xvciIsImNhcmRQdXNoQnV0dG9uVGV4dENvbG9yIiwiYWNjZW50IiwicGFkZGluZ1JlZ3VsYXIiLCJwcmltYXJ5Rm9udCIsImJveFNpemluZyIsImZvbnRGYW1pbHkiLCJwYWRkaW5nIiwiYXBwZWFyYW5jZSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJjb2xvciIsImZvbnRXZWlnaHQiLCJib3JkZXJDb2xvciIsImZvcmNlZENvbG9yQWRqdXN0Il0sInNvdXJjZVJvb3QiOiJidW5kbGU6Ly8vIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYWRhcHRpdmVDYXJkcy9TdHlsZXMvU3R5bGVTZXQvQWRhcHRpdmVDYXJkUmVuZGVyZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEZ1bGxCdW5kbGVTdHlsZU9wdGlvbnMgZnJvbSAnLi4vLi4vLi4vdHlwZXMvRnVsbEJ1bmRsZVN0eWxlT3B0aW9ucyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICh7XG4gIGNhcmRQdXNoQnV0dG9uQmFja2dyb3VuZENvbG9yLFxuICBjYXJkUHVzaEJ1dHRvblRleHRDb2xvcixcbiAgYWNjZW50LFxuICBwYWRkaW5nUmVndWxhcixcbiAgcHJpbWFyeUZvbnRcbn06IEZ1bGxCdW5kbGVTdHlsZU9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICAnJi53ZWJjaGF0X19hZGFwdGl2ZS1jYXJkLXJlbmRlcmVyJzoge1xuICAgICAgLy8gUmVsYXRlZCB0byAjNDA3NS5cbiAgICAgIC8vIEFkYXB0aXZlIENhcmRzIGFzc3VtZSBpdHMgaG9zdCBpcyBpbiBcImZvcmNlZCBib3JkZXItYm94XCIgbW9kZS5cbiAgICAgIC8vIEluIENTUywgdGhlIGRlZmF1bHQgaXMgXCJjb250ZW50LWJveFwiIG1vZGUuXG4gICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvYm94LXNpemluZyN2YWx1ZXNcbiAgICAgICcmIConOiB7XG4gICAgICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtaW5wdXQsICYgLmFjLWlubGluZUFjdGlvbkJ1dHRvbiwgJiAuYWMtcXVpY2tBY3Rpb25CdXR0b24nOiB7XG4gICAgICAgIGZvbnRGYW1pbHk6IHByaW1hcnlGb250XG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtbXVsdGljaG9pY2VJbnB1dCc6IHtcbiAgICAgICAgcGFkZGluZzogcGFkZGluZ1JlZ3VsYXJcbiAgICAgIH0sXG5cbiAgICAgICcmIC5hYy1wdXNoQnV0dG9uJzoge1xuICAgICAgICBhcHBlYXJhbmNlOiAnbm9uZScsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ1doaXRlJyxcbiAgICAgICAgYm9yZGVyU3R5bGU6ICdzb2xpZCcsXG4gICAgICAgIGJvcmRlcldpZHRoOiAxLFxuICAgICAgICBjb2xvcjogYWNjZW50LFxuICAgICAgICBmb250V2VpZ2h0OiA2MDAsXG4gICAgICAgIHBhZGRpbmc6IHBhZGRpbmdSZWd1bGFyXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1kZXN0cnVjdGl2ZSc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI0U1MDAwMCcsXG4gICAgICAgIGNvbG9yOiAnd2hpdGUnXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1kZXN0cnVjdGl2ZTpob3ZlciwgJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1kZXN0cnVjdGl2ZTphY3RpdmUnOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNCRjAwMDAnXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1wb3NpdGl2ZSc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzAwNzhENycsXG4gICAgICAgIGNvbG9yOiAnd2hpdGUnXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1wb3NpdGl2ZTpob3ZlciwgJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1wb3NpdGl2ZTphY3RpdmUnOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMwMDZBQkMnXG4gICAgICB9LFxuXG4gICAgICAvLyBUaGUgZm9sbG93aW5nIHN0eWxlcyBhcmUgY29waWVkIGZyb20gOmRpc2FibGVkIHZpYSBDaHJvbWl1bS5cblxuICAgICAgJyYgLmFjLXB1c2hCdXR0b24sICYgaW5wdXQsICYgc2VsZWN0LCAmIHRleHRhcmVhJzoge1xuICAgICAgICAnJlthcmlhLWRpc2FibGVkPVwidHJ1ZVwiXSc6IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDIzOSwgMjM5LCAyMzksIDAuMyknLFxuICAgICAgICAgIGJvcmRlckNvbG9yOiAncmdiYSgxMTgsIDExOCwgMTE4LCAwLjMpJyxcbiAgICAgICAgICBib3JkZXJTdHlsZTogJ3NvbGlkJyxcbiAgICAgICAgICBib3JkZXJXaWR0aDogMSxcbiAgICAgICAgICBjb2xvcjogJyM1NDU0NTQnXG4gICAgICAgIH1cbiAgICAgIH0sXG5cbiAgICAgICcmIC5hYy1wdXNoQnV0dG9uW2FyaWEtZGlzYWJsZWQ9XCJ0cnVlXCJdJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRUVFJyxcbiAgICAgICAgY29sb3I6ICcjNEY0RjRGJ1xuICAgICAgfSxcblxuICAgICAgJyYgLmFjLXB1c2hCdXR0b25bYXJpYS1wcmVzc2VkPVwidHJ1ZVwiXSc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBjYXJkUHVzaEJ1dHRvbkJhY2tncm91bmRDb2xvcixcbiAgICAgICAgYm9yZGVyQ29sb3I6IGNhcmRQdXNoQnV0dG9uQmFja2dyb3VuZENvbG9yLFxuICAgICAgICBjb2xvcjogY2FyZFB1c2hCdXR0b25UZXh0Q29sb3IsXG5cbiAgICAgICAgJ0BtZWRpYSAoZm9yY2VkLWNvbG9yczogYWN0aXZlKSc6IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdIaWdobGlnaHQnLFxuICAgICAgICAgIGJvcmRlckNvbG9yOiAnSGlnaGxpZ2h0JyxcbiAgICAgICAgICBjb2xvcjogJ0hpZ2hsaWdodFRleHQnLFxuICAgICAgICAgIGZvcmNlZENvbG9yQWRqdXN0OiAnbm9uZSdcbiAgICAgICAgfVxuICAgICAgfSxcblxuICAgICAgJyYgaW5wdXRbYXJpYS1kaXNhYmxlZD1cInRydWVcIl0nOiB7XG4gICAgICAgIHBhZGRpbmc6ICcycHggMXB4J1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVlLHdCQU1ZO0VBQUEsSUFMekJBLDZCQUt5QixRQUx6QkEsNkJBS3lCO0VBQUEsSUFKekJDLHVCQUl5QixRQUp6QkEsdUJBSXlCO0VBQUEsSUFIekJDLE1BR3lCLFFBSHpCQSxNQUd5QjtFQUFBLElBRnpCQyxjQUV5QixRQUZ6QkEsY0FFeUI7RUFBQSxJQUR6QkMsV0FDeUIsUUFEekJBLFdBQ3lCO0VBQ3pCLE9BQU87SUFDTCxxQ0FBcUM7TUFDbkM7TUFDQTtNQUNBO01BQ0E7TUFDQSxPQUFPO1FBQ0xDLFNBQVMsRUFBRTtNQUROLENBTDRCO01BU25DLGtFQUFrRTtRQUNoRUMsVUFBVSxFQUFFRjtNQURvRCxDQVQvQjtNQWFuQywwQkFBMEI7UUFDeEJHLE9BQU8sRUFBRUo7TUFEZSxDQWJTO01BaUJuQyxvQkFBb0I7UUFDbEJLLFVBQVUsRUFBRSxNQURNO1FBRWxCQyxlQUFlLEVBQUUsT0FGQztRQUdsQkMsV0FBVyxFQUFFLE9BSEs7UUFJbEJDLFdBQVcsRUFBRSxDQUpLO1FBS2xCQyxLQUFLLEVBQUVWLE1BTFc7UUFNbEJXLFVBQVUsRUFBRSxHQU5NO1FBT2xCTixPQUFPLEVBQUVKO01BUFMsQ0FqQmU7TUEyQm5DLHNDQUFzQztRQUNwQ00sZUFBZSxFQUFFLFNBRG1CO1FBRXBDRyxLQUFLLEVBQUU7TUFGNkIsQ0EzQkg7TUFnQ25DLHVGQUF1RjtRQUNyRkgsZUFBZSxFQUFFO01BRG9FLENBaENwRDtNQW9DbkMsbUNBQW1DO1FBQ2pDQSxlQUFlLEVBQUUsU0FEZ0I7UUFFakNHLEtBQUssRUFBRTtNQUYwQixDQXBDQTtNQXlDbkMsaUZBQWlGO1FBQy9FSCxlQUFlLEVBQUU7TUFEOEQsQ0F6QzlDO01BNkNuQztNQUVBLG1EQUFtRDtRQUNqRCwyQkFBMkI7VUFDekJBLGVBQWUsRUFBRSwwQkFEUTtVQUV6QkssV0FBVyxFQUFFLDBCQUZZO1VBR3pCSixXQUFXLEVBQUUsT0FIWTtVQUl6QkMsV0FBVyxFQUFFLENBSlk7VUFLekJDLEtBQUssRUFBRTtRQUxrQjtNQURzQixDQS9DaEI7TUF5RG5DLDBDQUEwQztRQUN4Q0gsZUFBZSxFQUFFLE1BRHVCO1FBRXhDRyxLQUFLLEVBQUU7TUFGaUMsQ0F6RFA7TUE4RG5DLHlDQUF5QztRQUN2Q0gsZUFBZSxFQUFFVCw2QkFEc0I7UUFFdkNjLFdBQVcsRUFBRWQsNkJBRjBCO1FBR3ZDWSxLQUFLLEVBQUVYLHVCQUhnQztRQUt2QyxrQ0FBa0M7VUFDaENRLGVBQWUsRUFBRSxXQURlO1VBRWhDSyxXQUFXLEVBQUUsV0FGbUI7VUFHaENGLEtBQUssRUFBRSxlQUh5QjtVQUloQ0csaUJBQWlCLEVBQUU7UUFKYTtNQUxLLENBOUROO01BMkVuQyxpQ0FBaUM7UUFDL0JSLE9BQU8sRUFBRTtNQURzQjtJQTNFRTtFQURoQyxDQUFQO0FBaUZEIn0=